<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Application name" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="My ASP.NET Application" xml:space="preserve">
    <value>我的应用</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>首页</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>联系</value>
  </data>
  <data name="Log in" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="SendEmailCode" xml:space="preserve">
    <value>邮箱确认码</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="Home Page" xml:space="preserve">
    <value>首页</value>
  </data>
  <data name="Register as a new user" xml:space="preserve">
    <value>注册新账号</value>
  </data>
  <data name="Forgot your password?" xml:space="preserve">
    <value>忘记密码</value>
  </data>
  <data name="Use a local account to log in." xml:space="preserve">
    <value>使用官方账号登录</value>
  </data>
  <data name="Create New Schema" xml:space="preserve">
    <value>创建新模式</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>系统设置</value>
  </data>
  <data name="Create a new schema to store data" xml:space="preserve">
    <value>创建一个新模式存储数据</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="System Setting" xml:space="preserve">
    <value>系统设置</value>
  </data>
  <data name="Schema Setting" xml:space="preserve">
    <value>模式设置</value>
  </data>
  <data name="Account Management" xml:space="preserve">
    <value>会员管理</value>
  </data>
  <data name="Wechat Setting" xml:space="preserve">
    <value>微信设置</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Create New" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>姓名</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>性别</value>
  </data>
  <data name="NickName" xml:space="preserve">
    <value>昵称</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>国家</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>省份</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>城市</value>
  </data>
  <data name="Distinct" xml:space="preserve">
    <value>区域</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>生日</value>
  </data>
  <data name="IsLocked" xml:space="preserve">
    <value>锁定</value>
  </data>
  <data name="IsComfirmed" xml:space="preserve">
    <value>已确认</value>
  </data>
  <data name="Unkonw" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>详细</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="Card Number" xml:space="preserve">
    <value>卡号</value>
  </data>
  <data name="Card Name" xml:space="preserve">
    <value>卡名</value>
  </data>
  <data name="Card Grade" xml:space="preserve">
    <value>等级</value>
  </data>
  <data name="Validate Code" xml:space="preserve">
    <value>校验码</value>
  </data>
  <data name="Is Used" xml:space="preserve">
    <value>是否使用</value>
  </data>
  <data name="Operate" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="File Name" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="Card Management" xml:space="preserve">
    <value>卡管理</value>
  </data>
  <data name="Bind Card" xml:space="preserve">
    <value>绑卡</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="Hello " xml:space="preserve">
    <value>欢迎</value>
  </data>
  <data name="Send Email Code" xml:space="preserve">
    <value>发送邮箱验证码</value>
  </data>
  <data name="IsConfirmed" xml:space="preserve">
    <value>是否确认</value>
  </data>
  <data name="Bind" xml:space="preserve">
    <value>绑定</value>
  </data>
  <data name="Card is not Existed" xml:space="preserve">
    <value>卡号不存在</value>
  </data>
  <data name="No data in the file" xml:space="preserve">
    <value>文件中没有数据</value>
  </data>
  <data name="Langauge" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Log off" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>验证</value>
  </data>
  <data name="Member Search" xml:space="preserve">
    <value>会员查询</value>
  </data>
  <data name="Member Create" xml:space="preserve">
    <value>会员招募</value>
  </data>
  <data name="Are you sure you want to delete this?" xml:space="preserve">
    <value>你确认删除这条记录？</value>
  </data>
  <data name="&gt;" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="Member Card" xml:space="preserve">
    <value>会员卡</value>
  </data>
  <data name="Search Member" xml:space="preserve">
    <value>搜索会员</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>扫描</value>
  </data>
  <data name="Member" xml:space="preserve">
    <value>会员</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>商家</value>
  </data>
  <data name="Store Member" xml:space="preserve">
    <value>Store Member</value>
  </data>
  <data name="No file uploaded" xml:space="preserve">
    <value>上传的文件为空</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>男</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="Site Setting" xml:space="preserve">
    <value>网站设置</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="Favs" xml:space="preserve">
    <value>Favs</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Update Domain" xml:space="preserve">
    <value>更新域名</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>管理</value>
  </data>
  <data name="微信菜单" xml:space="preserve">
    <value>微信菜单</value>
  </data>
  <data name="Create Schema" xml:space="preserve">
    <value>Create Schema</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="test" xml:space="preserve">
    <value>test</value>
  </data>
  <data name="Wechat" xml:space="preserve">
    <value>Wechat</value>
  </data>
</root>